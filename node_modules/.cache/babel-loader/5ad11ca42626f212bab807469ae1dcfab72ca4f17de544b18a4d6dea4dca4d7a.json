{"ast":null,"code":"var _jsxFileName = \"/Users/vishalpatil/Desktop/assignment/Tracknerd/doggo-app/src/components/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DogCarousel from \"./DogCarousel\";\nimport { Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCard = styled(Card)`\n  margin-bottom: 20px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n`;\n_c = ImageCard;\nconst Image = styled.img`\n  width: 100%;\n  height:100%;\n`;\n_c2 = Image;\nfunction Home() {\n  _s();\n  // State for holding the selected breed\n  const [selectedBreed, setSelectedBreed] = useState(\"\");\n\n  // State for holding the list of images\n  const [imageList, setImageList] = useState([]);\n  const [breedList, setBreedList] = useState([]);\n  // State for controlling the modal\n  const [showModal, setShowModal] = useState(false);\n  const [modalImage, setModalImage] = useState(\"\");\n\n  // Fetch images of a selected breed\n  useEffect(() => {\n    if (selectedBreed) {\n      fetch(`https://dog.ceo/api/breed/${selectedBreed}/images`).then(response => response.json()).then(data => setImageList(data.message));\n    } else {\n      fetch(\"https://dog.ceo/api/breeds/image/random/50\").then(response => response.json()).then(data => setImageList([data.message]));\n    }\n  }, [selectedBreed, setImageList]);\n  console.log(imageList);\n  // Handle click on an image\n  const handleImageClick = image => {\n    setModalImage(image);\n    setShowModal(true);\n  };\n  // Render images in odd-even layout\n  const isSmallScreen = useMediaQuery({\n    query: '(max-width: 576px)'\n  });\n  const isMediumScreen = useMediaQuery({\n    query: '(min-width: 577px) and (max-width: 991px)'\n  });\n  const numColumns = isSmallScreen ? 2 : isMediumScreen ? 3 : 4;\n\n  // ...\n\n  // Calculate the height of each row based on the tallest image in the row\n  const renderImages = () => {\n    const rowHeight = 300; // Change this to adjust the row height\n    const imageRows = [];\n    let currentRow = [];\n    let tallestInRow = 0;\n    imageList.forEach((image, index) => {\n      const img = new Image();\n      img.src = image;\n      img.onload = () => {\n        if (img.height > tallestInRow) {\n          tallestInRow = img.height;\n        }\n        currentRow.push({\n          index,\n          image,\n          height: img.height,\n          width: img.width\n        });\n        if (currentRow.length === numColumns) {\n          imageRows.push({\n            images: currentRow,\n            tallestInRow\n          });\n          currentRow = [];\n          tallestInRow = 0;\n        }\n      };\n    });\n\n    // Render each row with the appropriate number of columns and odd-even positioning based on image height\n    return imageRows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(Row, {\n      children: [row.images.map(imageData => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: Math.floor(12 / numColumns),\n        children: /*#__PURE__*/_jsxDEV(ImageCard, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: imageData.image,\n            alt: \"dog\",\n            onClick: () => handleImageClick(imageList[imageData.index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, imageData.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)), numColumns - row.images.length > 0 && /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: Math.floor(12 / numColumns)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, rowIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(DogCarousel, {\n      setSelectedBreed: setSelectedBreed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), imageList.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ImageCard, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: data,\n          alt: \"dog\",\n          onClick: () => handleImageClick(imageList[index])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      size: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: modalImage,\n          className: \"w-100\",\n          alt: \"dog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"w0m2ueJQhvWOzTDKBUoMD//BLKo=\", true);\n_c3 = Home;\nexport default Home;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ImageCard\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","DogCarousel","Container","Row","Col","Card","Button","Modal","styled","jsxDEV","_jsxDEV","ImageCard","_c","Image","img","_c2","Home","_s","selectedBreed","setSelectedBreed","imageList","setImageList","breedList","setBreedList","showModal","setShowModal","modalImage","setModalImage","fetch","then","response","json","data","message","console","log","handleImageClick","image","isSmallScreen","useMediaQuery","query","isMediumScreen","numColumns","renderImages","rowHeight","imageRows","currentRow","tallestInRow","forEach","index","src","onload","height","push","width","length","images","map","row","rowIndex","children","imageData","xs","md","Math","floor","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","show","onHide","size","Body","_c3","$RefreshReg$"],"sources":["/Users/vishalpatil/Desktop/assignment/Tracknerd/doggo-app/src/components/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DogCarousel from \"./DogCarousel\";\nimport { Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst ImageCard = styled(Card)`\n  margin-bottom: 20px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height:100%;\n`;\n\nfunction Home() {\n  // State for holding the selected breed\n  const [selectedBreed, setSelectedBreed] = useState(\"\");\n\n  // State for holding the list of images\n  const [imageList, setImageList] = useState([]);\n  const [breedList, setBreedList] = useState([]);\n  // State for controlling the modal\n  const [showModal, setShowModal] = useState(false);\n  const [modalImage, setModalImage] = useState(\"\");\n\n  // Fetch images of a selected breed\n  useEffect(() => {\n    if (selectedBreed) {\n      fetch(`https://dog.ceo/api/breed/${selectedBreed}/images`)\n        .then((response) => response.json())\n        .then((data) => setImageList(data.message));\n    } else {\n      fetch(\"https://dog.ceo/api/breeds/image/random/50\")\n        .then((response) => response.json())\n        .then((data) => setImageList([data.message]));\n    }\n  }, [selectedBreed, setImageList]);\n  console.log(imageList);\n  // Handle click on an image\n  const handleImageClick = (image) => {\n    setModalImage(image);\n    setShowModal(true);\n  };\n  // Render images in odd-even layout\n  const isSmallScreen = useMediaQuery({ query: '(max-width: 576px)' });\n  const isMediumScreen = useMediaQuery({ query: '(min-width: 577px) and (max-width: 991px)' });\n  const numColumns = isSmallScreen ? 2 : (isMediumScreen ? 3 : 4);\n\n  // ...\n\n  // Calculate the height of each row based on the tallest image in the row\n  const renderImages = () => {\n    const rowHeight = 300; // Change this to adjust the row height\n    const imageRows = [];\n    let currentRow = [];\n    let tallestInRow = 0;\n    imageList.forEach((image, index) => {\n      const img = new Image();\n      img.src = image;\n      img.onload = () => {\n        if (img.height > tallestInRow) {\n          tallestInRow = img.height;\n        }\n        currentRow.push({ index, image, height: img.height, width: img.width });\n        if (currentRow.length === numColumns) {\n          imageRows.push({ images: currentRow, tallestInRow });\n          currentRow = [];\n          tallestInRow = 0;\n        }\n      };\n    });\n\n    // Render each row with the appropriate number of columns and odd-even positioning based on image height\n    return imageRows.map((row, rowIndex) => (\n      <Row key={rowIndex}>\n        {row.images.map((imageData) => (\n          <Col key={imageData.index} xs={12} md={Math.floor(12 / numColumns)}>\n            <ImageCard>\n              <Image\n                src={imageData.image}\n                alt=\"dog\"\n                onClick={() => handleImageClick(imageList[imageData.index])}\n              />\n            </ImageCard>\n          </Col>\n        ))}\n        {numColumns - row.images.length > 0 && (\n          <Col xs={12} md={Math.floor(12 / numColumns)}>\n            {/* Add an empty column to fill out the row */}\n          </Col>\n        )}\n      </Row>\n    ));\n  };\n  return (\n    <Container className=\"my-5\">\n      <DogCarousel setSelectedBreed={setSelectedBreed} />\n      {imageList.map((data,index) => (\n        <div key={index}>\n          <ImageCard>\n            <Image\n              src={data}\n              alt=\"dog\"\n              onClick={() => handleImageClick(imageList[index])}\n            />\n          </ImageCard>\n        </div>\n      ))}\n      <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\">\n        <Modal.Body>\n          <img src={modalImage} className=\"w-100\" alt=\"dog\" />\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}