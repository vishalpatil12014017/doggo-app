{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  // State for holding the selected breed\n  const [selectedBreed, setSelectedBreed] = useState(\"\");\n\n  // State for holding the list of images\n  const [imageList, setImageList] = useState([]);\n  const [breedList, setBreedList] = useState([]);\n  // State for controlling the modal\n  const [showModal, setShowModal] = useState(false);\n  const [modalImage, setModalImage] = useState(\"\");\n\n  // Fetch a random dog image on component mount\n  useEffect(() => {\n    fetch(\"https://dog.ceo/api/breeds/list/all\").then(response => response.json()).then(data => {\n      console.log(data.message);\n      setBreedList(Object.keys(data.message));\n    });\n  }, []);\n\n  // Fetch images of a selected breed\n  //   useEffect(() => {\n  //     if (selectedBreed) {\n  //       fetch(`https://dog.ceo/api/breed/${selectedBreed}/images`)\n  //         .then((response) => response.json())\n  //         .then((data) => setImageList(data.message));\n  //     } else {\n  //       fetch(\"https://dog.ceo/api/breeds/image/random\")\n  //         .then((response) => response.json())\n  //         .then((data) => setImageList([data.message]));\n  //     }\n  //   }, [selectedBreed]);\n\n  // Handle click on an image\n  const handleImageClick = image => {\n    setModalImage(image);\n    setShowModal(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Home, \"7hJQa/x/Chbv/isaxpma1VuyCYU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Modal","Fragment","_Fragment","jsxDEV","_jsxDEV","Home","_s","selectedBreed","setSelectedBreed","imageList","setImageList","breedList","setBreedList","showModal","setShowModal","modalImage","setModalImage","fetch","then","response","json","data","console","log","message","Object","keys","handleImageClick","image","_c","$RefreshReg$"],"sources":["/Users/vishalpatil/Desktop/assignment/Tracknerd/doggo-app/src/components/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\nfunction Home() {\n  // State for holding the selected breed\n  const [selectedBreed, setSelectedBreed] = useState(\"\");\n\n  // State for holding the list of images\n  const [imageList, setImageList] = useState([]);\n  const [breedList, setBreedList] = useState([]);\n  // State for controlling the modal\n  const [showModal, setShowModal] = useState(false);\n  const [modalImage, setModalImage] = useState(\"\");\n\n  // Fetch a random dog image on component mount\n  useEffect(() => {\n    fetch(\"https://dog.ceo/api/breeds/list/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.message);\n        setBreedList(Object.keys(data.message));\n      });\n  }, []);\n\n  // Fetch images of a selected breed\n  //   useEffect(() => {\n  //     if (selectedBreed) {\n  //       fetch(`https://dog.ceo/api/breed/${selectedBreed}/images`)\n  //         .then((response) => response.json())\n  //         .then((data) => setImageList(data.message));\n  //     } else {\n  //       fetch(\"https://dog.ceo/api/breeds/image/random\")\n  //         .then((response) => response.json())\n  //         .then((data) => setImageList([data.message]));\n  //     }\n  //   }, [selectedBreed]);\n\n  // Handle click on an image\n  const handleImageClick = (image) => {\n    setModalImage(image);\n    setShowModal(true);\n  };\n\n  return (\n   <></>\n  );\n}\n\nexport default Home;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC3E,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACduB,KAAK,CAAC,qCAAqC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,OAAO,CAAC;MACzBZ,YAAY,CAACa,MAAM,CAACC,IAAI,CAACL,IAAI,CAACG,OAAO,CAAC,CAAC;IACzC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMG,gBAAgB,GAAIC,KAAK,IAAK;IAClCZ,aAAa,CAACY,KAAK,CAAC;IACpBd,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACCV,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAER;AAACI,EAAA,CA3CQD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AA6Cb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}