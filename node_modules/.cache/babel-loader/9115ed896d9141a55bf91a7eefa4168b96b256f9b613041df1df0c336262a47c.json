{"ast":null,"code":"var _jsxFileName = \"/Users/vishalpatil/Desktop/assignment/Tracknerd/doggo-app/src/components/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DogCarousel from \"./DogCarousel\";\nimport { Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCard = styled(Card)`\n  margin-bottom: 20px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n`;\nconst Image = styled.img`\n  width: 100%;\n`;\nfunction Home() {\n  _s();\n  // State for holding the selected breed\n  const [selectedBreed, setSelectedBreed] = useState(\"\");\n\n  // State for holding the list of images\n  const [imageList, setImageList] = useState([]);\n  const [breedList, setBreedList] = useState([]);\n  // State for controlling the modal\n  const [showModal, setShowModal] = useState(false);\n  const [modalImage, setModalImage] = useState(\"\");\n\n  // Fetch images of a selected breed\n  useEffect(() => {\n    if (selectedBreed) {\n      fetch(`https://dog.ceo/api/breed/${selectedBreed}/images`).then(response => response.json()).then(data => setImageList(data.message));\n    } else {\n      fetch(\"https://dog.ceo/api/breeds/image/random/50\").then(response => response.json()).then(data => setImageList([data.message]));\n    }\n  }, [selectedBreed, setImageList]);\n\n  // Handle click on an image\n  const handleImageClick = image => {\n    setModalImage(image);\n    setShowModal(true);\n  };\n  console.log(imageList);\n  // Render images in odd-even layout\n  // Render images in odd-even layout\n  const renderImages = () => {\n    let rowHeight = 400;\n    let cols = 4;\n    if (window.innerWidth < 768) {\n      cols = 1;\n      rowHeight = 300;\n    } else if (window.innerWidth < 992) {\n      cols = 3;\n    }\n    const ratio = 16 / 9;\n    const totalWidth = window.innerWidth - 40;\n    const cellWidth = Math.floor(totalWidth / cols);\n    const rowWidth = cellWidth * cols;\n    const rows = Math.ceil(imageList.length / cols);\n    const style = {\n      display: \"grid\",\n      gridTemplateColumns: `repeat(${cols}, ${cellWidth}px)`,\n      gridAutoRows: `${rowHeight}px`\n    };\n    const cells = [];\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        const index = i * cols + j;\n        const image = imageList[index];\n        if (!image) break;\n        const img = new Image();\n        img.src = image;\n        img.onload = () => {\n          if (img.height > rowHeight) {\n            const aspectRatio = img.width / img.height;\n            const cellHeight = Math.floor(cellWidth / aspectRatio);\n            const cellTop = (rowHeight - cellHeight) / 2;\n            cells[index].style.height = `${cellHeight}px`;\n            cells[index].style.gridRowEnd = `span ${Math.ceil(cellHeight / rowHeight)}`;\n            cells[index].style.top = `${cellTop}px`;\n          }\n        };\n        const cellStyle = {\n          backgroundImage: `url(${image})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          gridColumnStart: `${j + 1}`,\n          gridRowStart: `${i + 1}`,\n          position: \"relative\"\n        };\n        cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: cellStyle,\n          ref: el => cells[index] = el,\n          onClick: () => handleImageClick(image)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 20\n        }, this));\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: cells\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(DogCarousel, {\n      setSelectedBreed: setSelectedBreed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), imageList.length > 0 && renderImages(), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      size: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: modalImage,\n          className: \"w-100\",\n          alt: \"dog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"7hJQa/x/Chbv/isaxpma1VuyCYU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","DogCarousel","Container","Row","Col","Card","Button","Modal","styled","jsxDEV","_jsxDEV","ImageCard","Image","img","Home","_s","selectedBreed","setSelectedBreed","imageList","setImageList","breedList","setBreedList","showModal","setShowModal","modalImage","setModalImage","fetch","then","response","json","data","message","handleImageClick","image","console","log","renderImages","rowHeight","cols","window","innerWidth","ratio","totalWidth","cellWidth","Math","floor","rowWidth","rows","ceil","length","style","display","gridTemplateColumns","gridAutoRows","cells","i","j","index","src","onload","height","aspectRatio","width","cellHeight","cellTop","gridRowEnd","top","cellStyle","backgroundImage","backgroundSize","backgroundPosition","gridColumnStart","gridRowStart","position","push","ref","el","onClick","fileName","_jsxFileName","lineNumber","columnNumber","children","className","show","onHide","size","Body","alt","_c","$RefreshReg$"],"sources":["/Users/vishalpatil/Desktop/assignment/Tracknerd/doggo-app/src/components/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DogCarousel from \"./DogCarousel\";\nimport { Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst ImageCard = styled(Card)`\n  margin-bottom: 20px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n`;\n\nconst Image = styled.img`\n  width: 100%;\n`;\n\nfunction Home() {\n  // State for holding the selected breed\n  const [selectedBreed, setSelectedBreed] = useState(\"\");\n\n  // State for holding the list of images\n  const [imageList, setImageList] = useState([]);\n  const [breedList, setBreedList] = useState([]);\n  // State for controlling the modal\n  const [showModal, setShowModal] = useState(false);\n  const [modalImage, setModalImage] = useState(\"\");\n\n  // Fetch images of a selected breed\n  useEffect(() => {\n    if (selectedBreed) {\n      fetch(`https://dog.ceo/api/breed/${selectedBreed}/images`)\n        .then((response) => response.json())\n        .then((data) => setImageList(data.message));\n    } else {\n      fetch(\"https://dog.ceo/api/breeds/image/random/50\")\n        .then((response) => response.json())\n        .then((data) => setImageList([data.message]));\n    }\n  }, [selectedBreed, setImageList]);\n\n  // Handle click on an image\n  const handleImageClick = (image) => {\n    setModalImage(image);\n    setShowModal(true);\n  };\n  console.log(imageList);\n  // Render images in odd-even layout\n  // Render images in odd-even layout\n  const renderImages = () => {\n    let rowHeight = 400;\n    let cols = 4;\n    if (window.innerWidth < 768) {\n      cols = 1;\n      rowHeight = 300;\n    } else if (window.innerWidth < 992) {\n      cols = 3;\n    }\n    const ratio = 16 / 9;\n    const totalWidth = window.innerWidth - 40;\n    const cellWidth = Math.floor(totalWidth / cols);\n    const rowWidth = cellWidth * cols;\n    const rows = Math.ceil(imageList.length / cols);\n\n    const style = {\n      display: \"grid\",\n      gridTemplateColumns: `repeat(${cols}, ${cellWidth}px)`,\n      gridAutoRows: `${rowHeight}px`\n    };\n\n    const cells = [];\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        const index = i * cols + j;\n        const image = imageList[index];\n        if (!image) break;\n        const img = new Image();\n        img.src = image;\n        img.onload = () => {\n          if (img.height > rowHeight) {\n            const aspectRatio = img.width / img.height;\n            const cellHeight = Math.floor(cellWidth / aspectRatio);\n            const cellTop = (rowHeight - cellHeight) / 2;\n            cells[index].style.height = `${cellHeight}px`;\n            cells[index].style.gridRowEnd = `span ${Math.ceil(cellHeight / rowHeight)}`;\n            cells[index].style.top = `${cellTop}px`;\n          }\n        };\n        const cellStyle = {\n          backgroundImage: `url(${image})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          gridColumnStart: `${j + 1}`,\n          gridRowStart: `${i + 1}`,\n          position: \"relative\"\n        };\n        cells.push(<div style={cellStyle} key={index} ref={el => cells[index] = el} onClick={() => handleImageClick(image)} />);\n      }\n    }\n    return <div style={style}>{cells}</div>;\n  };\n\n  return (\n    <Container className=\"my-5\">\n      <DogCarousel setSelectedBreed={setSelectedBreed} />\n      {imageList.length > 0 && renderImages()}\n      <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\">\n        <Modal.Body>\n          <img src={modalImage} className=\"w-100\" alt=\"dog\" />\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}