{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nfunction invertNumber(min, max, num) {\n  return max + min - num;\n}\nfunction convertRange(oldMin, oldMax, newMin, newMax, oldValue) {\n  var percent = (oldValue - oldMin) / (oldMax - oldMin);\n  var result = percent * (newMax - newMin) + newMin;\n  return result || 0;\n}\nfunction convertWidthToPx(width, containerWidth) {\n  if (typeof width === \"number\") {\n    return width;\n  }\n  if (typeof width !== \"string\") {\n    throw new Error(\"Received: \".concat(width, \" - Size must be a number or string\"));\n  }\n  if (width.substr(-1) === \"%\") {\n    var percent = 100 / Number(width.slice(0, -1));\n    return containerWidth / percent;\n  }\n  if (width.substr(-2) === \"px\") {\n    return Number(width.slice(0, -2));\n  }\n  return Number(width);\n}\nfunction convertWidthToString(width) {\n  if (typeof width === \"number\") {\n    return width + \"px\";\n  }\n  return width;\n}\nfunction noop() {}\nvar _default = {\n  invertNumber: invertNumber,\n  convertRange: convertRange,\n  convertWidthToPx: convertWidthToPx,\n  convertWidthToString: convertWidthToString,\n  noop: noop\n};\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","invertNumber","min","max","num","convertRange","oldMin","oldMax","newMin","newMax","oldValue","percent","result","convertWidthToPx","width","containerWidth","Error","concat","substr","Number","slice","convertWidthToString","noop","_default"],"sources":["/Users/vishalpatil/Desktop/assignment/Tracknerd/doggo-app/node_modules/react-image-magnifiers/dist/utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction invertNumber(min, max, num) {\n  return max + min - num;\n}\n\nfunction convertRange(oldMin, oldMax, newMin, newMax, oldValue) {\n  var percent = (oldValue - oldMin) / (oldMax - oldMin);\n  var result = percent * (newMax - newMin) + newMin;\n  return result || 0;\n}\n\nfunction convertWidthToPx(width, containerWidth) {\n  if (typeof width === \"number\") {\n    return width;\n  }\n\n  if (typeof width !== \"string\") {\n    throw new Error(\"Received: \".concat(width, \" - Size must be a number or string\"));\n  }\n\n  if (width.substr(-1) === \"%\") {\n    var percent = 100 / Number(width.slice(0, -1));\n    return containerWidth / percent;\n  }\n\n  if (width.substr(-2) === \"px\") {\n    return Number(width.slice(0, -2));\n  }\n\n  return Number(width);\n}\n\nfunction convertWidthToString(width) {\n  if (typeof width === \"number\") {\n    return width + \"px\";\n  }\n\n  return width;\n}\n\nfunction noop() {}\n\nvar _default = {\n  invertNumber: invertNumber,\n  convertRange: convertRange,\n  convertWidthToPx: convertWidthToPx,\n  convertWidthToString: convertWidthToString,\n  noop: noop\n};\nexports[\"default\"] = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AAE3B,SAASE,YAAYA,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE;EACnC,OAAOD,GAAG,GAAGD,GAAG,GAAGE,GAAG;AACxB;AAEA,SAASC,YAAYA,CAACC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAE;EAC9D,IAAIC,OAAO,GAAG,CAACD,QAAQ,GAAGJ,MAAM,KAAKC,MAAM,GAAGD,MAAM,CAAC;EACrD,IAAIM,MAAM,GAAGD,OAAO,IAAIF,MAAM,GAAGD,MAAM,CAAC,GAAGA,MAAM;EACjD,OAAOI,MAAM,IAAI,CAAC;AACpB;AAEA,SAASC,gBAAgBA,CAACC,KAAK,EAAEC,cAAc,EAAE;EAC/C,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOA,KAAK;EACd;EAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAIE,KAAK,CAAC,YAAY,CAACC,MAAM,CAACH,KAAK,EAAE,oCAAoC,CAAC,CAAC;EACnF;EAEA,IAAIA,KAAK,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC5B,IAAIP,OAAO,GAAG,GAAG,GAAGQ,MAAM,CAACL,KAAK,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9C,OAAOL,cAAc,GAAGJ,OAAO;EACjC;EAEA,IAAIG,KAAK,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;IAC7B,OAAOC,MAAM,CAACL,KAAK,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACnC;EAEA,OAAOD,MAAM,CAACL,KAAK,CAAC;AACtB;AAEA,SAASO,oBAAoBA,CAACP,KAAK,EAAE;EACnC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOA,KAAK,GAAG,IAAI;EACrB;EAEA,OAAOA,KAAK;AACd;AAEA,SAASQ,IAAIA,CAAA,EAAG,CAAC;AAEjB,IAAIC,QAAQ,GAAG;EACbtB,YAAY,EAAEA,YAAY;EAC1BI,YAAY,EAAEA,YAAY;EAC1BQ,gBAAgB,EAAEA,gBAAgB;EAClCQ,oBAAoB,EAAEA,oBAAoB;EAC1CC,IAAI,EAAEA;AACR,CAAC;AACDvB,OAAO,CAAC,SAAS,CAAC,GAAGwB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}