{"ast":null,"code":"import React, { Component, createRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nfunction ICompress() {\n  return React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    \"data-rmiz-btn-unzoom-icon\": true,\n    fill: \"currentColor\",\n    focusable: \"false\",\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, React.createElement(\"path\", {\n    d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\"\n  }));\n}\nfunction IEnlarge() {\n  return React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    \"data-rmiz-btn-zoom-icon\": true,\n    fill: \"currentColor\",\n    focusable: \"false\",\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, React.createElement(\"path\", {\n    d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\"\n  }));\n}\nconst testElType = (type, el) => type === el?.tagName?.toUpperCase?.();\nconst testDiv = el => testElType('DIV', el) || testElType('SPAN', el);\nconst testImg = el => testElType('IMG', el);\nconst testImgLoaded = el => el.complete && el.naturalHeight !== 0;\nconst testSvg = el => testElType('SVG', el);\nconst getScaleToWindow = _ref => {\n  let {\n    height,\n    offset,\n    width\n  } = _ref;\n  return Math.min((window.innerWidth - offset * 2) / width, (window.innerHeight - offset * 2) / height);\n};\nconst getScaleToWindowMax = _ref2 => {\n  let {\n    containerHeight,\n    containerWidth,\n    offset,\n    targetHeight,\n    targetWidth\n  } = _ref2;\n  const scale = getScaleToWindow({\n    height: targetHeight,\n    offset,\n    width: targetWidth\n  });\n  const ratio = targetWidth > targetHeight ? targetWidth / containerWidth : targetHeight / containerHeight;\n  return scale > 1 ? ratio : scale * ratio;\n};\nconst getScale = _ref3 => {\n  let {\n    containerHeight,\n    containerWidth,\n    hasScalableSrc,\n    offset,\n    targetHeight,\n    targetWidth\n  } = _ref3;\n  if (!containerHeight || !containerWidth) {\n    return 1;\n  }\n  return !hasScalableSrc && targetHeight && targetWidth ? getScaleToWindowMax({\n    containerHeight,\n    containerWidth,\n    offset,\n    targetHeight,\n    targetWidth\n  }) : getScaleToWindow({\n    height: containerHeight,\n    offset,\n    width: containerWidth\n  });\n};\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\nconst getImgSrc = imgEl => {\n  if (imgEl) {\n    if (testImg(imgEl)) {\n      return imgEl.currentSrc;\n    } else if (testDiv(imgEl)) {\n      const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n      if (bgImg) {\n        return URL_REGEX.exec(bgImg)?.[1];\n      }\n    }\n  }\n};\nconst getImgAlt = imgEl => {\n  if (imgEl) {\n    if (testImg(imgEl)) {\n      return imgEl.alt ?? undefined;\n    } else {\n      return imgEl.getAttribute('aria-label') ?? undefined;\n    }\n  }\n};\nconst getImgRegularStyle = _ref4 => {\n  let {\n    containerHeight,\n    containerLeft,\n    containerTop,\n    containerWidth,\n    hasScalableSrc,\n    offset,\n    targetHeight,\n    targetWidth\n  } = _ref4;\n  const scale = getScale({\n    containerHeight,\n    containerWidth,\n    hasScalableSrc,\n    offset,\n    targetHeight,\n    targetWidth\n  });\n  return {\n    top: containerTop,\n    left: containerLeft,\n    width: containerWidth * scale,\n    height: containerHeight * scale,\n    transform: `translate(0,0) scale(${1 / scale})`\n  };\n};\nconst parsePosition = _ref5 => {\n  let {\n    position,\n    relativeNum\n  } = _ref5;\n  const positionNum = parseFloat(position);\n  return position.endsWith('%') ? relativeNum * positionNum / 100 : positionNum;\n};\nconst getImgObjectFitStyle = _ref6 => {\n  let {\n    containerHeight,\n    containerLeft,\n    containerTop,\n    containerWidth,\n    hasScalableSrc,\n    objectFit,\n    objectPosition,\n    offset,\n    targetHeight,\n    targetWidth\n  } = _ref6;\n  if (objectFit === 'scale-down') {\n    if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n      objectFit = 'none';\n    } else {\n      objectFit = 'contain';\n    }\n  }\n  if (objectFit === 'cover' || objectFit === 'contain') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = objectFit === 'cover' ? Math.max(widthRatio, heightRatio) : Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else if (objectFit === 'none') {\n    const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight\n    });\n    const scale = getScale({\n      containerHeight: targetHeight,\n      containerWidth: targetWidth,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * scale,\n      height: targetHeight * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else if (objectFit === 'fill') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = Math.max(widthRatio, heightRatio);\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      width: containerWidth * scale,\n      height: containerHeight * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else {\n    return {};\n  }\n};\nconst getDivImgStyle = _ref7 => {\n  let {\n    backgroundPosition,\n    backgroundSize,\n    containerHeight,\n    containerLeft,\n    containerTop,\n    containerWidth,\n    hasScalableSrc,\n    offset,\n    targetHeight,\n    targetWidth\n  } = _ref7;\n  if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = backgroundSize === 'cover' ? Math.max(widthRatio, heightRatio) : Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else if (backgroundSize === 'auto') {\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight\n    });\n    const scale = getScale({\n      containerHeight: targetHeight,\n      containerWidth: targetWidth,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * scale,\n      height: targetHeight * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else {\n    const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n    const sizeWidth = parsePosition({\n      position: sizeW,\n      relativeNum: containerWidth\n    });\n    const sizeHeight = parsePosition({\n      position: sizeH,\n      relativeNum: containerHeight\n    });\n    const widthRatio = sizeWidth / targetWidth;\n    const heightRatio = sizeHeight / targetHeight;\n    const ratio = Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  }\n};\nconst SRC_SVG_REGEX = /\\.svg$/i;\nconst getStyleModalImg = _ref8 => {\n  let {\n    hasZoomImg,\n    imgSrc,\n    isSvg,\n    isZoomed,\n    loadedImgEl,\n    offset,\n    shouldRefresh,\n    targetEl\n  } = _ref8;\n  const hasScalableSrc = isSvg || imgSrc?.slice?.(0, 18) === 'data:image/svg+xml' || hasZoomImg || !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n  const imgRect = targetEl.getBoundingClientRect();\n  const targetElComputedStyle = window.getComputedStyle(targetEl);\n  const styleImgRegular = getImgRegularStyle({\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    offset,\n    targetHeight: loadedImgEl?.naturalHeight ?? imgRect.height,\n    targetWidth: loadedImgEl?.naturalWidth ?? imgRect.width\n  });\n  const styleImgObjectFit = loadedImgEl && targetElComputedStyle.objectFit ? getImgObjectFitStyle({\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    objectFit: targetElComputedStyle.objectFit,\n    objectPosition: targetElComputedStyle.objectPosition,\n    offset,\n    targetHeight: loadedImgEl.naturalHeight,\n    targetWidth: loadedImgEl.naturalWidth\n  }) : undefined;\n  const styleDivImg = loadedImgEl && testDiv(targetEl) ? getDivImgStyle({\n    backgroundPosition: targetElComputedStyle.backgroundPosition,\n    backgroundSize: targetElComputedStyle.backgroundSize,\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    offset,\n    targetHeight: loadedImgEl.naturalHeight,\n    targetWidth: loadedImgEl.naturalWidth\n  }) : undefined;\n  const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n  if (isZoomed) {\n    const viewportX = window.innerWidth / 2;\n    const viewportY = window.innerHeight / 2;\n    const childCenterX = parseFloat(String(style.left || 0)) + parseFloat(String(style.width || 0)) / 2;\n    const childCenterY = parseFloat(String(style.top || 0)) + parseFloat(String(style.height || 0)) / 2;\n    const translateX = viewportX - childCenterX;\n    const translateY = viewportY - childCenterY;\n    if (shouldRefresh) {\n      style.transitionDuration = '0.01ms';\n    }\n    style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\n  }\n  return style;\n};\nconst getStyleGhost = imgEl => {\n  if (!imgEl) {\n    return {};\n  }\n  if (testSvg(imgEl)) {\n    const parentEl = imgEl.parentElement;\n    const rect = imgEl.getBoundingClientRect();\n    if (parentEl) {\n      const parentRect = parentEl.getBoundingClientRect();\n      return {\n        height: rect.height,\n        left: parentRect.left - rect.left,\n        top: parentRect.top - rect.top,\n        width: rect.width\n      };\n    } else {\n      return {\n        height: rect.height,\n        left: rect.left,\n        width: rect.width,\n        top: rect.top\n      };\n    }\n  } else {\n    return {\n      height: imgEl.offsetHeight,\n      left: imgEl.offsetLeft,\n      width: imgEl.offsetWidth,\n      top: imgEl.offsetTop\n    };\n  }\n};\nlet elDialogContainer;\nif (typeof document !== 'undefined') {\n  elDialogContainer = document.createElement('div');\n  elDialogContainer.setAttribute('data-rmiz-portal', '');\n  document.body.appendChild(elDialogContainer);\n}\nconst IMAGE_QUERY = ['img', 'svg', '[role=\"img\"]', '[data-zoom]'].map(x => `${x}:not([aria-hidden=\"true\"])`).join(',');\nconst defaultBodyAttrs = {\n  overflow: '',\n  width: ''\n};\nfunction Controlled(props) {\n  return React.createElement(ControlledBase, {\n    ...props\n  });\n}\nclass ControlledBase extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: '',\n      isZoomImgLoaded: false,\n      loadedImgEl: undefined,\n      modalState: \"UNLOADED\",\n      shouldRefresh: false\n    };\n    this.refContent = createRef();\n    this.refDialog = createRef();\n    this.refModalContent = createRef();\n    this.refModalImg = createRef();\n    this.refWrap = createRef();\n    this.imgEl = null;\n    this.prevBodyAttrs = defaultBodyAttrs;\n    this.styleModalImg = {};\n    this.setId = () => {\n      const gen4 = () => Math.random().toString(16).slice(-4);\n      this.setState({\n        id: gen4() + gen4() + gen4()\n      });\n    };\n    this.setAndTrackImg = () => {\n      const contentEl = this.refContent.current;\n      if (!contentEl) return;\n      this.imgEl = contentEl.querySelector(IMAGE_QUERY);\n      if (this.imgEl) {\n        this.changeObserver?.disconnect?.();\n        this.imgEl?.addEventListener?.('load', this.handleImgLoad);\n        this.imgEl?.addEventListener?.('click', this.handleZoom);\n        if (!this.state.loadedImgEl) {\n          this.handleImgLoad();\n        }\n        this.imgElObserver = new ResizeObserver(entries => {\n          const entry = entries[0];\n          if (entry?.target) {\n            this.imgEl = entry.target;\n            this.setState({});\n          }\n        });\n        this.imgElObserver.observe(this.imgEl);\n      } else if (!this.changeObserver) {\n        this.changeObserver = new MutationObserver(this.setAndTrackImg);\n        this.changeObserver.observe(contentEl, {\n          childList: true,\n          subtree: true\n        });\n      }\n    };\n    this.handleIfZoomChanged = prevIsZoomed => {\n      const {\n        isZoomed\n      } = this.props;\n      if (!prevIsZoomed && isZoomed) {\n        this.zoom();\n      } else if (prevIsZoomed && !isZoomed) {\n        this.unzoom();\n      }\n    };\n    this.handleImgLoad = () => {\n      const {\n        imgEl\n      } = this;\n      const imgSrc = getImgSrc(imgEl);\n      if (!imgSrc) return;\n      const img = new Image();\n      if (testImg(imgEl)) {\n        img.sizes = imgEl.sizes;\n        img.srcset = imgEl.srcset;\n      }\n      img.src = imgSrc;\n      const setLoaded = () => {\n        this.setState({\n          loadedImgEl: img\n        });\n      };\n      img.decode().then(setLoaded).catch(() => {\n        if (testImgLoaded(img)) {\n          setLoaded();\n          return;\n        }\n        img.onload = setLoaded;\n      });\n    };\n    this.handleZoom = () => {\n      this.props.onZoomChange?.(true);\n    };\n    this.handleUnzoom = () => {\n      this.props.onZoomChange?.(false);\n    };\n    this.handleDialogCancel = e => {\n      e.preventDefault();\n    };\n    this.handleDialogClick = e => {\n      if (e.target === this.refModalContent.current || e.target === this.refModalImg.current) {\n        this.handleUnzoom();\n      }\n    };\n    this.handleDialogKeyDown = e => {\n      if (e.key === 'Escape' || e.keyCode === 27) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.handleUnzoom();\n      }\n    };\n    this.handleWheel = e => {\n      e.stopPropagation();\n      queueMicrotask(() => {\n        this.handleUnzoom();\n      });\n    };\n    this.handleTouchStart = e => {\n      if (e.changedTouches.length === 1 && e.changedTouches[0]) {\n        this.touchYStart = e.changedTouches[0].screenY;\n      }\n    };\n    this.handleTouchMove = e => {\n      if (this.touchYStart != null && e.changedTouches[0]) {\n        this.touchYEnd = e.changedTouches[0].screenY;\n        const max = Math.max(this.touchYStart, this.touchYEnd);\n        const min = Math.min(this.touchYStart, this.touchYEnd);\n        const delta = Math.abs(max - min);\n        const threshold = 10;\n        if (delta > threshold) {\n          this.touchYStart = undefined;\n          this.touchYEnd = undefined;\n          this.handleUnzoom();\n        }\n      }\n    };\n    this.handleTouchCancel = () => {\n      this.touchYStart = undefined;\n      this.touchYEnd = undefined;\n    };\n    this.handleResize = () => {\n      this.setState({\n        shouldRefresh: true\n      });\n    };\n    this.zoom = () => {\n      this.bodyScrollDisable();\n      this.refDialog.current?.showModal?.();\n      this.setState({\n        modalState: \"LOADING\"\n      });\n      this.loadZoomImg();\n      window.addEventListener('wheel', this.handleWheel, {\n        passive: true\n      });\n      window.addEventListener('touchstart', this.handleTouchStart, {\n        passive: true\n      });\n      window.addEventListener('touchend', this.handleTouchMove, {\n        passive: true\n      });\n      window.addEventListener('touchcancel', this.handleTouchCancel, {\n        passive: true\n      });\n      this.refModalImg.current?.addEventListener?.('transitionend', this.handleZoomEnd, {\n        once: true\n      });\n    };\n    this.handleZoomEnd = () => {\n      setTimeout(() => {\n        this.setState({\n          modalState: \"LOADED\"\n        });\n        window.addEventListener('resize', this.handleResize, {\n          passive: true\n        });\n      }, 0);\n    };\n    this.unzoom = () => {\n      this.setState({\n        modalState: \"UNLOADING\"\n      });\n      window.removeEventListener('wheel', this.handleWheel);\n      window.removeEventListener('touchstart', this.handleTouchStart);\n      window.removeEventListener('touchend', this.handleTouchMove);\n      window.removeEventListener('touchcancel', this.handleTouchCancel);\n      this.refModalImg.current?.addEventListener?.('transitionend', this.handleUnzoomEnd, {\n        once: true\n      });\n    };\n    this.handleUnzoomEnd = () => {\n      setTimeout(() => {\n        window.removeEventListener('resize', this.handleResize);\n        this.setState({\n          shouldRefresh: false,\n          modalState: \"UNLOADED\"\n        });\n        this.refDialog.current?.close?.();\n        this.bodyScrollEnable();\n      }, 0);\n    };\n    this.bodyScrollDisable = () => {\n      this.prevBodyAttrs = {\n        overflow: document.body.style.overflow,\n        width: document.body.style.width\n      };\n      const clientWidth = document.body.clientWidth;\n      document.body.style.overflow = 'hidden';\n      document.body.style.width = `${clientWidth}px`;\n    };\n    this.bodyScrollEnable = () => {\n      document.body.style.width = this.prevBodyAttrs.width;\n      document.body.style.overflow = this.prevBodyAttrs.overflow;\n      this.prevBodyAttrs = defaultBodyAttrs;\n    };\n    this.loadZoomImg = () => {\n      const {\n        props: {\n          zoomImg\n        }\n      } = this;\n      const zoomImgSrc = zoomImg?.src;\n      if (zoomImgSrc) {\n        const img = new Image();\n        img.sizes = zoomImg?.sizes ?? '';\n        img.srcset = zoomImg?.srcSet ?? '';\n        img.src = zoomImgSrc;\n        const setLoaded = () => {\n          this.setState({\n            isZoomImgLoaded: true\n          });\n        };\n        img.decode().then(setLoaded).catch(() => {\n          if (testImgLoaded(img)) {\n            setLoaded();\n            return;\n          }\n          img.onload = setLoaded;\n        });\n      }\n    };\n    this.UNSAFE_handleSvg = () => {\n      const {\n        imgEl,\n        refModalImg,\n        styleModalImg\n      } = this;\n      if (testSvg(imgEl)) {\n        const tmp = document.createElement('div');\n        tmp.innerHTML = imgEl.outerHTML;\n        const svg = tmp.firstChild;\n        svg.style.width = `${styleModalImg.width || 0}px`;\n        svg.style.height = `${styleModalImg.height || 0}px`;\n        svg.addEventListener('click', this.handleUnzoom);\n        refModalImg.current?.firstChild?.remove?.();\n        refModalImg.current?.appendChild?.(svg);\n      }\n    };\n  }\n  render() {\n    const {\n      handleDialogCancel,\n      handleDialogClick,\n      handleDialogKeyDown,\n      handleUnzoom,\n      handleZoom,\n      imgEl,\n      props: {\n        a11yNameButtonUnzoom,\n        a11yNameButtonZoom,\n        children,\n        classDialog,\n        IconUnzoom,\n        IconZoom,\n        isZoomed,\n        wrapElement: WrapElement,\n        ZoomContent,\n        zoomImg,\n        zoomMargin\n      },\n      refContent,\n      refDialog,\n      refModalContent,\n      refModalImg,\n      refWrap,\n      state: {\n        id,\n        isZoomImgLoaded,\n        loadedImgEl,\n        modalState,\n        shouldRefresh\n      }\n    } = this;\n    const idModal = `rmiz-modal-${id}`;\n    const idModalImg = `rmiz-modal-img-${id}`;\n    const isDiv = testDiv(imgEl);\n    const isImg = testImg(imgEl);\n    const isSvg = testSvg(imgEl);\n    const imgAlt = getImgAlt(imgEl);\n    const imgSrc = getImgSrc(imgEl);\n    const imgSizes = isImg ? imgEl.sizes : undefined;\n    const imgSrcSet = isImg ? imgEl.srcset : undefined;\n    const hasZoomImg = !!zoomImg?.src;\n    const hasImage = imgEl && (loadedImgEl || isSvg) && window.getComputedStyle(imgEl).display !== 'none';\n    const labelBtnZoom = imgAlt ? `${a11yNameButtonZoom}: ${imgAlt}` : a11yNameButtonZoom;\n    const isModalActive = modalState === \"LOADING\" || modalState === \"LOADED\";\n    const dataContentState = hasImage ? 'found' : 'not-found';\n    const dataOverlayState = modalState === \"UNLOADED\" || modalState === \"UNLOADING\" ? 'hidden' : 'visible';\n    const styleContent = {\n      visibility: modalState === \"UNLOADED\" ? 'visible' : 'hidden'\n    };\n    const styleGhost = getStyleGhost(imgEl);\n    this.styleModalImg = hasImage ? getStyleModalImg({\n      hasZoomImg,\n      imgSrc,\n      isSvg,\n      isZoomed: isZoomed && isModalActive,\n      loadedImgEl,\n      offset: zoomMargin,\n      shouldRefresh,\n      targetEl: imgEl\n    }) : {};\n    let modalContent = null;\n    if (hasImage) {\n      const modalImg = isImg || isDiv ? React.createElement(\"img\", {\n        alt: imgAlt,\n        sizes: imgSizes,\n        src: imgSrc,\n        srcSet: imgSrcSet,\n        ...(isZoomImgLoaded && modalState === \"LOADED\" ? zoomImg : {}),\n        \"data-rmiz-modal-img\": \"\",\n        height: this.styleModalImg.height || undefined,\n        id: idModalImg,\n        ref: refModalImg,\n        style: this.styleModalImg,\n        width: this.styleModalImg.width || undefined\n      }) : isSvg ? React.createElement(\"div\", {\n        \"data-rmiz-modal-img\": true,\n        ref: refModalImg,\n        style: this.styleModalImg\n      }) : null;\n      const modalBtnUnzoom = React.createElement(\"button\", {\n        \"aria-label\": a11yNameButtonUnzoom,\n        \"data-rmiz-btn-unzoom\": \"\",\n        onClick: handleUnzoom,\n        type: \"button\"\n      }, React.createElement(IconUnzoom, null));\n      modalContent = ZoomContent ? React.createElement(ZoomContent, {\n        buttonUnzoom: modalBtnUnzoom,\n        modalState: modalState,\n        img: modalImg,\n        onUnzoom: handleUnzoom\n      }) : React.createElement(React.Fragment, null, modalImg, modalBtnUnzoom);\n    }\n    return React.createElement(WrapElement, {\n      \"aria-owns\": idModal,\n      \"data-rmiz\": \"\",\n      ref: refWrap\n    }, React.createElement(WrapElement, {\n      \"data-rmiz-content\": dataContentState,\n      ref: refContent,\n      style: styleContent\n    }, children), hasImage && React.createElement(WrapElement, {\n      \"data-rmiz-ghost\": \"\",\n      style: styleGhost\n    }, React.createElement(\"button\", {\n      \"aria-label\": labelBtnZoom,\n      \"data-rmiz-btn-zoom\": \"\",\n      onClick: handleZoom,\n      type: \"button\"\n    }, React.createElement(IconZoom, null))), hasImage && elDialogContainer != null && createPortal(React.createElement(\"dialog\", {\n      \"aria-labelledby\": idModalImg,\n      \"aria-modal\": \"true\",\n      className: classDialog,\n      \"data-rmiz-modal\": \"\",\n      id: idModal,\n      onClick: handleDialogClick,\n      onClose: handleUnzoom,\n      onCancel: handleDialogCancel,\n      onKeyDown: handleDialogKeyDown,\n      ref: refDialog,\n      role: \"dialog\"\n    }, React.createElement(\"div\", {\n      \"data-rmiz-modal-overlay\": dataOverlayState\n    }), React.createElement(\"div\", {\n      \"data-rmiz-modal-content\": \"\",\n      ref: refModalContent\n    }, modalContent)), elDialogContainer));\n  }\n  componentDidMount() {\n    this.setId();\n    this.setAndTrackImg();\n    this.handleImgLoad();\n    this.UNSAFE_handleSvg();\n  }\n  componentWillUnmount() {\n    this.changeObserver?.disconnect?.();\n    this.imgElObserver?.disconnect?.();\n    this.imgEl?.removeEventListener?.('load', this.handleImgLoad);\n    this.imgEl?.removeEventListener?.('click', this.handleZoom);\n    this.refModalImg.current?.removeEventListener?.('transitionend', this.handleZoomEnd);\n    this.refModalImg.current?.removeEventListener?.('transitionend', this.handleUnzoomEnd);\n    window.removeEventListener('wheel', this.handleWheel);\n    window.removeEventListener('touchstart', this.handleTouchStart);\n    window.removeEventListener('touchend', this.handleTouchMove);\n    window.removeEventListener('touchcancel', this.handleTouchCancel);\n    window.removeEventListener('resize', this.handleResize);\n  }\n  componentDidUpdate(prevProps) {\n    this.UNSAFE_handleSvg();\n    this.handleIfZoomChanged(prevProps.isZoomed);\n  }\n}\nControlledBase.defaultProps = {\n  a11yNameButtonUnzoom: 'Minimize image',\n  a11yNameButtonZoom: 'Expand image',\n  IconUnzoom: ICompress,\n  IconZoom: IEnlarge,\n  wrapElement: 'div',\n  zoomMargin: 0\n};\nfunction Uncontrolled(props) {\n  const [isZoomed, setIsZoomed] = useState(false);\n  return React.createElement(Controlled, {\n    ...props,\n    isZoomed: isZoomed,\n    onZoomChange: setIsZoomed\n  });\n}\nexport { Controlled, Uncontrolled as default };","map":{"version":3,"names":["React","Component","createRef","useState","createPortal","ICompress","createElement","fill","focusable","viewBox","xmlns","d","IEnlarge","testElType","type","el","tagName","toUpperCase","testDiv","testImg","testImgLoaded","complete","naturalHeight","testSvg","getScaleToWindow","_ref","height","offset","width","Math","min","window","innerWidth","innerHeight","getScaleToWindowMax","_ref2","containerHeight","containerWidth","targetHeight","targetWidth","scale","ratio","getScale","_ref3","hasScalableSrc","URL_REGEX","getImgSrc","imgEl","currentSrc","bgImg","getComputedStyle","backgroundImage","exec","getImgAlt","alt","undefined","getAttribute","getImgRegularStyle","_ref4","containerLeft","containerTop","top","left","transform","parsePosition","_ref5","position","relativeNum","positionNum","parseFloat","endsWith","getImgObjectFitStyle","_ref6","objectFit","objectPosition","widthRatio","heightRatio","max","posLeft","posTop","split","posX","posY","getDivImgStyle","_ref7","backgroundPosition","backgroundSize","sizeW","sizeH","sizeWidth","sizeHeight","SRC_SVG_REGEX","getStyleModalImg","_ref8","hasZoomImg","imgSrc","isSvg","isZoomed","loadedImgEl","shouldRefresh","targetEl","slice","test","imgRect","getBoundingClientRect","targetElComputedStyle","styleImgRegular","naturalWidth","styleImgObjectFit","styleDivImg","style","Object","assign","viewportX","viewportY","childCenterX","String","childCenterY","translateX","translateY","transitionDuration","getStyleGhost","parentEl","parentElement","rect","parentRect","offsetHeight","offsetLeft","offsetWidth","offsetTop","elDialogContainer","document","setAttribute","body","appendChild","IMAGE_QUERY","map","x","join","defaultBodyAttrs","overflow","Controlled","props","ControlledBase","constructor","arguments","state","id","isZoomImgLoaded","modalState","refContent","refDialog","refModalContent","refModalImg","refWrap","prevBodyAttrs","styleModalImg","setId","gen4","random","toString","setState","setAndTrackImg","contentEl","current","querySelector","changeObserver","disconnect","addEventListener","handleImgLoad","handleZoom","imgElObserver","ResizeObserver","entries","entry","target","observe","MutationObserver","childList","subtree","handleIfZoomChanged","prevIsZoomed","zoom","unzoom","img","Image","sizes","srcset","src","setLoaded","decode","then","catch","onload","onZoomChange","handleUnzoom","handleDialogCancel","e","preventDefault","handleDialogClick","handleDialogKeyDown","key","keyCode","stopPropagation","handleWheel","queueMicrotask","handleTouchStart","changedTouches","length","touchYStart","screenY","handleTouchMove","touchYEnd","delta","abs","threshold","handleTouchCancel","handleResize","bodyScrollDisable","showModal","loadZoomImg","passive","handleZoomEnd","once","setTimeout","removeEventListener","handleUnzoomEnd","close","bodyScrollEnable","clientWidth","zoomImg","zoomImgSrc","srcSet","UNSAFE_handleSvg","tmp","innerHTML","outerHTML","svg","firstChild","remove","render","a11yNameButtonUnzoom","a11yNameButtonZoom","children","classDialog","IconUnzoom","IconZoom","wrapElement","WrapElement","ZoomContent","zoomMargin","idModal","idModalImg","isDiv","isImg","imgAlt","imgSizes","imgSrcSet","hasImage","display","labelBtnZoom","isModalActive","dataContentState","dataOverlayState","styleContent","visibility","styleGhost","modalContent","modalImg","ref","modalBtnUnzoom","onClick","buttonUnzoom","onUnzoom","Fragment","className","onClose","onCancel","onKeyDown","role","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","defaultProps","Uncontrolled","setIsZoomed","default"],"sources":["/Users/vishalpatil/Desktop/assignment/Tracknerd/doggo-app/node_modules/react-medium-image-zoom/dist/index.js"],"sourcesContent":["import React, { Component, createRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nfunction ICompress() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-unzoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\" })));\n}\nfunction IEnlarge() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-zoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\" })));\n}\n\nconst testElType = (type, el) => type === el?.tagName?.toUpperCase?.();\nconst testDiv = (el) => testElType('DIV', el) || testElType('SPAN', el);\nconst testImg = (el) => testElType('IMG', el);\nconst testImgLoaded = (el) => el.complete && el.naturalHeight !== 0;\nconst testSvg = (el) => testElType('SVG', el);\nconst getScaleToWindow = ({ height, offset, width }) => {\n    return Math.min((window.innerWidth - offset * 2) / width, (window.innerHeight - offset * 2) / height);\n};\nconst getScaleToWindowMax = ({ containerHeight, containerWidth, offset, targetHeight, targetWidth, }) => {\n    const scale = getScaleToWindow({\n        height: targetHeight,\n        offset,\n        width: targetWidth,\n    });\n    const ratio = targetWidth > targetHeight\n        ? targetWidth / containerWidth\n        : targetHeight / containerHeight;\n    return scale > 1 ? ratio : scale * ratio;\n};\nconst getScale = ({ containerHeight, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (!containerHeight || !containerWidth) {\n        return 1;\n    }\n    return !hasScalableSrc && targetHeight && targetWidth\n        ? getScaleToWindowMax({\n            containerHeight,\n            containerWidth,\n            offset,\n            targetHeight,\n            targetWidth,\n        })\n        : getScaleToWindow({\n            height: containerHeight,\n            offset,\n            width: containerWidth,\n        });\n};\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\nconst getImgSrc = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.currentSrc;\n        }\n        else if (testDiv(imgEl)) {\n            const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n            if (bgImg) {\n                return URL_REGEX.exec(bgImg)?.[1];\n            }\n        }\n    }\n};\nconst getImgAlt = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.alt ?? undefined;\n        }\n        else {\n            return imgEl.getAttribute('aria-label') ?? undefined;\n        }\n    }\n};\nconst getImgRegularStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    const scale = getScale({\n        containerHeight,\n        containerWidth,\n        hasScalableSrc,\n        offset,\n        targetHeight,\n        targetWidth,\n    });\n    return {\n        top: containerTop,\n        left: containerLeft,\n        width: containerWidth * scale,\n        height: containerHeight * scale,\n        transform: `translate(0,0) scale(${1 / scale})`,\n    };\n};\nconst parsePosition = ({ position, relativeNum }) => {\n    const positionNum = parseFloat(position);\n    return position.endsWith('%')\n        ? relativeNum * positionNum / 100\n        : positionNum;\n};\nconst getImgObjectFitStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, objectFit, objectPosition, offset, targetHeight, targetWidth, }) => {\n    if (objectFit === 'scale-down') {\n        if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n            objectFit = 'none';\n        }\n        else {\n            objectFit = 'contain';\n        }\n    }\n    if (objectFit === 'cover' || objectFit === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = objectFit === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'none') {\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'fill') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = Math.max(widthRatio, heightRatio);\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            width: containerWidth * scale,\n            height: containerHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        return {};\n    }\n};\nconst getDivImgStyle = ({ backgroundPosition, backgroundSize, containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = backgroundSize === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (backgroundSize === 'auto') {\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n        const sizeWidth = parsePosition({ position: sizeW, relativeNum: containerWidth });\n        const sizeHeight = parsePosition({ position: sizeH, relativeNum: containerHeight });\n        const widthRatio = sizeWidth / targetWidth;\n        const heightRatio = sizeHeight / targetHeight;\n        const ratio = Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n};\nconst SRC_SVG_REGEX = /\\.svg$/i;\nconst getStyleModalImg = ({ hasZoomImg, imgSrc, isSvg, isZoomed, loadedImgEl, offset, shouldRefresh, targetEl, }) => {\n    const hasScalableSrc = isSvg ||\n        imgSrc?.slice?.(0, 18) === 'data:image/svg+xml' ||\n        hasZoomImg ||\n        !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n    const imgRect = targetEl.getBoundingClientRect();\n    const targetElComputedStyle = window.getComputedStyle(targetEl);\n    const styleImgRegular = getImgRegularStyle({\n        containerHeight: imgRect.height,\n        containerLeft: imgRect.left,\n        containerTop: imgRect.top,\n        containerWidth: imgRect.width,\n        hasScalableSrc,\n        offset,\n        targetHeight: loadedImgEl?.naturalHeight ?? imgRect.height,\n        targetWidth: loadedImgEl?.naturalWidth ?? imgRect.width,\n    });\n    const styleImgObjectFit = loadedImgEl && targetElComputedStyle.objectFit\n        ? getImgObjectFitStyle({\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            objectFit: targetElComputedStyle.objectFit,\n            objectPosition: targetElComputedStyle.objectPosition,\n            offset,\n            targetHeight: loadedImgEl.naturalHeight,\n            targetWidth: loadedImgEl.naturalWidth,\n        })\n        : undefined;\n    const styleDivImg = loadedImgEl && testDiv(targetEl)\n        ? getDivImgStyle({\n            backgroundPosition: targetElComputedStyle.backgroundPosition,\n            backgroundSize: targetElComputedStyle.backgroundSize,\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            offset,\n            targetHeight: loadedImgEl.naturalHeight,\n            targetWidth: loadedImgEl.naturalWidth,\n        })\n        : undefined;\n    const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n    if (isZoomed) {\n        const viewportX = window.innerWidth / 2;\n        const viewportY = window.innerHeight / 2;\n        const childCenterX = parseFloat(String(style.left || 0)) + (parseFloat(String(style.width || 0)) / 2);\n        const childCenterY = parseFloat(String(style.top || 0)) + (parseFloat(String(style.height || 0)) / 2);\n        const translateX = viewportX - childCenterX;\n        const translateY = viewportY - childCenterY;\n        if (shouldRefresh) {\n            style.transitionDuration = '0.01ms';\n        }\n        style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\n    }\n    return style;\n};\nconst getStyleGhost = (imgEl) => {\n    if (!imgEl) {\n        return {};\n    }\n    if (testSvg(imgEl)) {\n        const parentEl = imgEl.parentElement;\n        const rect = imgEl.getBoundingClientRect();\n        if (parentEl) {\n            const parentRect = parentEl.getBoundingClientRect();\n            return {\n                height: rect.height,\n                left: parentRect.left - rect.left,\n                top: parentRect.top - rect.top,\n                width: rect.width,\n            };\n        }\n        else {\n            return {\n                height: rect.height,\n                left: rect.left,\n                width: rect.width,\n                top: rect.top,\n            };\n        }\n    }\n    else {\n        return {\n            height: imgEl.offsetHeight,\n            left: imgEl.offsetLeft,\n            width: imgEl.offsetWidth,\n            top: imgEl.offsetTop,\n        };\n    }\n};\n\nlet elDialogContainer;\nif (typeof document !== 'undefined') {\n    elDialogContainer = document.createElement('div');\n    elDialogContainer.setAttribute('data-rmiz-portal', '');\n    document.body.appendChild(elDialogContainer);\n}\nconst IMAGE_QUERY = ['img', 'svg', '[role=\"img\"]', '[data-zoom]']\n    .map(x => `${x}:not([aria-hidden=\"true\"])`)\n    .join(',');\nconst defaultBodyAttrs = {\n    overflow: '',\n    width: '',\n};\nfunction Controlled(props) {\n    return React.createElement(ControlledBase, { ...props });\n}\nclass ControlledBase extends Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            id: '',\n            isZoomImgLoaded: false,\n            loadedImgEl: undefined,\n            modalState: \"UNLOADED\",\n            shouldRefresh: false,\n        };\n        this.refContent = createRef();\n        this.refDialog = createRef();\n        this.refModalContent = createRef();\n        this.refModalImg = createRef();\n        this.refWrap = createRef();\n        this.imgEl = null;\n        this.prevBodyAttrs = defaultBodyAttrs;\n        this.styleModalImg = {};\n        this.setId = () => {\n            const gen4 = () => Math.random().toString(16).slice(-4);\n            this.setState({ id: gen4() + gen4() + gen4() });\n        };\n        this.setAndTrackImg = () => {\n            const contentEl = this.refContent.current;\n            if (!contentEl)\n                return;\n            this.imgEl = contentEl.querySelector(IMAGE_QUERY);\n            if (this.imgEl) {\n                this.changeObserver?.disconnect?.();\n                this.imgEl?.addEventListener?.('load', this.handleImgLoad);\n                this.imgEl?.addEventListener?.('click', this.handleZoom);\n                if (!this.state.loadedImgEl) {\n                    this.handleImgLoad();\n                }\n                this.imgElObserver = new ResizeObserver(entries => {\n                    const entry = entries[0];\n                    if (entry?.target) {\n                        this.imgEl = entry.target;\n                        this.setState({});\n                    }\n                });\n                this.imgElObserver.observe(this.imgEl);\n            }\n            else if (!this.changeObserver) {\n                this.changeObserver = new MutationObserver(this.setAndTrackImg);\n                this.changeObserver.observe(contentEl, { childList: true, subtree: true });\n            }\n        };\n        this.handleIfZoomChanged = (prevIsZoomed) => {\n            const { isZoomed } = this.props;\n            if (!prevIsZoomed && isZoomed) {\n                this.zoom();\n            }\n            else if (prevIsZoomed && !isZoomed) {\n                this.unzoom();\n            }\n        };\n        this.handleImgLoad = () => {\n            const { imgEl } = this;\n            const imgSrc = getImgSrc(imgEl);\n            if (!imgSrc)\n                return;\n            const img = new Image();\n            if (testImg(imgEl)) {\n                img.sizes = imgEl.sizes;\n                img.srcset = imgEl.srcset;\n            }\n            img.src = imgSrc;\n            const setLoaded = () => {\n                this.setState({ loadedImgEl: img });\n            };\n            img\n                .decode()\n                .then(setLoaded)\n                .catch(() => {\n                if (testImgLoaded(img)) {\n                    setLoaded();\n                    return;\n                }\n                img.onload = setLoaded;\n            });\n        };\n        this.handleZoom = () => {\n            this.props.onZoomChange?.(true);\n        };\n        this.handleUnzoom = () => {\n            this.props.onZoomChange?.(false);\n        };\n        this.handleDialogCancel = (e) => {\n            e.preventDefault();\n        };\n        this.handleDialogClick = (e) => {\n            if (e.target === this.refModalContent.current || e.target === this.refModalImg.current) {\n                this.handleUnzoom();\n            }\n        };\n        this.handleDialogKeyDown = (e) => {\n            if (e.key === 'Escape' || e.keyCode === 27) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.handleUnzoom();\n            }\n        };\n        this.handleWheel = (e) => {\n            e.stopPropagation();\n            queueMicrotask(() => {\n                this.handleUnzoom();\n            });\n        };\n        this.handleTouchStart = (e) => {\n            if (e.changedTouches.length === 1 && e.changedTouches[0]) {\n                this.touchYStart = e.changedTouches[0].screenY;\n            }\n        };\n        this.handleTouchMove = (e) => {\n            if (this.touchYStart != null && e.changedTouches[0]) {\n                this.touchYEnd = e.changedTouches[0].screenY;\n                const max = Math.max(this.touchYStart, this.touchYEnd);\n                const min = Math.min(this.touchYStart, this.touchYEnd);\n                const delta = Math.abs(max - min);\n                const threshold = 10;\n                if (delta > threshold) {\n                    this.touchYStart = undefined;\n                    this.touchYEnd = undefined;\n                    this.handleUnzoom();\n                }\n            }\n        };\n        this.handleTouchCancel = () => {\n            this.touchYStart = undefined;\n            this.touchYEnd = undefined;\n        };\n        this.handleResize = () => {\n            this.setState({ shouldRefresh: true });\n        };\n        this.zoom = () => {\n            this.bodyScrollDisable();\n            this.refDialog.current?.showModal?.();\n            this.setState({ modalState: \"LOADING\" });\n            this.loadZoomImg();\n            window.addEventListener('wheel', this.handleWheel, { passive: true });\n            window.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n            window.addEventListener('touchend', this.handleTouchMove, { passive: true });\n            window.addEventListener('touchcancel', this.handleTouchCancel, { passive: true });\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleZoomEnd, { once: true });\n        };\n        this.handleZoomEnd = () => {\n            setTimeout(() => {\n                this.setState({ modalState: \"LOADED\" });\n                window.addEventListener('resize', this.handleResize, { passive: true });\n            }, 0);\n        };\n        this.unzoom = () => {\n            this.setState({ modalState: \"UNLOADING\" });\n            window.removeEventListener('wheel', this.handleWheel);\n            window.removeEventListener('touchstart', this.handleTouchStart);\n            window.removeEventListener('touchend', this.handleTouchMove);\n            window.removeEventListener('touchcancel', this.handleTouchCancel);\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleUnzoomEnd, { once: true });\n        };\n        this.handleUnzoomEnd = () => {\n            setTimeout(() => {\n                window.removeEventListener('resize', this.handleResize);\n                this.setState({\n                    shouldRefresh: false,\n                    modalState: \"UNLOADED\",\n                });\n                this.refDialog.current?.close?.();\n                this.bodyScrollEnable();\n            }, 0);\n        };\n        this.bodyScrollDisable = () => {\n            this.prevBodyAttrs = {\n                overflow: document.body.style.overflow,\n                width: document.body.style.width,\n            };\n            const clientWidth = document.body.clientWidth;\n            document.body.style.overflow = 'hidden';\n            document.body.style.width = `${clientWidth}px`;\n        };\n        this.bodyScrollEnable = () => {\n            document.body.style.width = this.prevBodyAttrs.width;\n            document.body.style.overflow = this.prevBodyAttrs.overflow;\n            this.prevBodyAttrs = defaultBodyAttrs;\n        };\n        this.loadZoomImg = () => {\n            const { props: { zoomImg } } = this;\n            const zoomImgSrc = zoomImg?.src;\n            if (zoomImgSrc) {\n                const img = new Image();\n                img.sizes = zoomImg?.sizes ?? '';\n                img.srcset = zoomImg?.srcSet ?? '';\n                img.src = zoomImgSrc;\n                const setLoaded = () => {\n                    this.setState({ isZoomImgLoaded: true });\n                };\n                img\n                    .decode()\n                    .then(setLoaded)\n                    .catch(() => {\n                    if (testImgLoaded(img)) {\n                        setLoaded();\n                        return;\n                    }\n                    img.onload = setLoaded;\n                });\n            }\n        };\n        this.UNSAFE_handleSvg = () => {\n            const { imgEl, refModalImg, styleModalImg } = this;\n            if (testSvg(imgEl)) {\n                const tmp = document.createElement('div');\n                tmp.innerHTML = imgEl.outerHTML;\n                const svg = tmp.firstChild;\n                svg.style.width = `${styleModalImg.width || 0}px`;\n                svg.style.height = `${styleModalImg.height || 0}px`;\n                svg.addEventListener('click', this.handleUnzoom);\n                refModalImg.current?.firstChild?.remove?.();\n                refModalImg.current?.appendChild?.(svg);\n            }\n        };\n    }\n    render() {\n        const { handleDialogCancel, handleDialogClick, handleDialogKeyDown, handleUnzoom, handleZoom, imgEl, props: { a11yNameButtonUnzoom, a11yNameButtonZoom, children, classDialog, IconUnzoom, IconZoom, isZoomed, wrapElement: WrapElement, ZoomContent, zoomImg, zoomMargin, }, refContent, refDialog, refModalContent, refModalImg, refWrap, state: { id, isZoomImgLoaded, loadedImgEl, modalState, shouldRefresh, }, } = this;\n        const idModal = `rmiz-modal-${id}`;\n        const idModalImg = `rmiz-modal-img-${id}`;\n        const isDiv = testDiv(imgEl);\n        const isImg = testImg(imgEl);\n        const isSvg = testSvg(imgEl);\n        const imgAlt = getImgAlt(imgEl);\n        const imgSrc = getImgSrc(imgEl);\n        const imgSizes = isImg ? imgEl.sizes : undefined;\n        const imgSrcSet = isImg ? imgEl.srcset : undefined;\n        const hasZoomImg = !!zoomImg?.src;\n        const hasImage = imgEl &&\n            (loadedImgEl || isSvg) &&\n            window.getComputedStyle(imgEl).display !== 'none';\n        const labelBtnZoom = imgAlt\n            ? `${a11yNameButtonZoom}: ${imgAlt}`\n            : a11yNameButtonZoom;\n        const isModalActive = modalState === \"LOADING\" ||\n            modalState === \"LOADED\";\n        const dataContentState = hasImage ? 'found' : 'not-found';\n        const dataOverlayState = modalState === \"UNLOADED\" || modalState === \"UNLOADING\"\n            ? 'hidden'\n            : 'visible';\n        const styleContent = {\n            visibility: modalState === \"UNLOADED\" ? 'visible' : 'hidden',\n        };\n        const styleGhost = getStyleGhost(imgEl);\n        this.styleModalImg = hasImage\n            ? getStyleModalImg({\n                hasZoomImg,\n                imgSrc,\n                isSvg,\n                isZoomed: isZoomed && isModalActive,\n                loadedImgEl,\n                offset: zoomMargin,\n                shouldRefresh,\n                targetEl: imgEl,\n            })\n            : {};\n        let modalContent = null;\n        if (hasImage) {\n            const modalImg = isImg || isDiv\n                ? React.createElement(\"img\", { alt: imgAlt, sizes: imgSizes, src: imgSrc, srcSet: imgSrcSet, ...isZoomImgLoaded && modalState === \"LOADED\" ? zoomImg : {}, \"data-rmiz-modal-img\": \"\", height: this.styleModalImg.height || undefined, id: idModalImg, ref: refModalImg, style: this.styleModalImg, width: this.styleModalImg.width || undefined })\n                : isSvg\n                    ? React.createElement(\"div\", { \"data-rmiz-modal-img\": true, ref: refModalImg, style: this.styleModalImg })\n                    : null;\n            const modalBtnUnzoom = React.createElement(\"button\", { \"aria-label\": a11yNameButtonUnzoom, \"data-rmiz-btn-unzoom\": \"\", onClick: handleUnzoom, type: \"button\" },\n                React.createElement(IconUnzoom, null));\n            modalContent = ZoomContent\n                ? React.createElement(ZoomContent, { buttonUnzoom: modalBtnUnzoom, modalState: modalState, img: modalImg, onUnzoom: handleUnzoom })\n                : React.createElement(React.Fragment, null,\n                    modalImg,\n                    modalBtnUnzoom);\n        }\n        return (React.createElement(WrapElement, { \"aria-owns\": idModal, \"data-rmiz\": \"\", ref: refWrap },\n            React.createElement(WrapElement, { \"data-rmiz-content\": dataContentState, ref: refContent, style: styleContent }, children),\n            hasImage && React.createElement(WrapElement, { \"data-rmiz-ghost\": \"\", style: styleGhost },\n                React.createElement(\"button\", { \"aria-label\": labelBtnZoom, \"data-rmiz-btn-zoom\": \"\", onClick: handleZoom, type: \"button\" },\n                    React.createElement(IconZoom, null))),\n            hasImage && elDialogContainer != null && createPortal(React.createElement(\"dialog\", { \"aria-labelledby\": idModalImg, \"aria-modal\": \"true\", className: classDialog, \"data-rmiz-modal\": \"\", id: idModal, onClick: handleDialogClick, onClose: handleUnzoom, onCancel: handleDialogCancel, onKeyDown: handleDialogKeyDown, ref: refDialog, role: \"dialog\" },\n                React.createElement(\"div\", { \"data-rmiz-modal-overlay\": dataOverlayState }),\n                React.createElement(\"div\", { \"data-rmiz-modal-content\": \"\", ref: refModalContent }, modalContent)), elDialogContainer)));\n    }\n    componentDidMount() {\n        this.setId();\n        this.setAndTrackImg();\n        this.handleImgLoad();\n        this.UNSAFE_handleSvg();\n    }\n    componentWillUnmount() {\n        this.changeObserver?.disconnect?.();\n        this.imgElObserver?.disconnect?.();\n        this.imgEl?.removeEventListener?.('load', this.handleImgLoad);\n        this.imgEl?.removeEventListener?.('click', this.handleZoom);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleZoomEnd);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleUnzoomEnd);\n        window.removeEventListener('wheel', this.handleWheel);\n        window.removeEventListener('touchstart', this.handleTouchStart);\n        window.removeEventListener('touchend', this.handleTouchMove);\n        window.removeEventListener('touchcancel', this.handleTouchCancel);\n        window.removeEventListener('resize', this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        this.UNSAFE_handleSvg();\n        this.handleIfZoomChanged(prevProps.isZoomed);\n    }\n}\nControlledBase.defaultProps = {\n    a11yNameButtonUnzoom: 'Minimize image',\n    a11yNameButtonZoom: 'Expand image',\n    IconUnzoom: ICompress,\n    IconZoom: IEnlarge,\n    wrapElement: 'div',\n    zoomMargin: 0,\n};\n\nfunction Uncontrolled(props) {\n    const [isZoomed, setIsZoomed] = useState(false);\n    return React.createElement(Controlled, { ...props, isZoomed: isZoomed, onZoomChange: setIsZoomed });\n}\n\nexport { Controlled, Uncontrolled as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}